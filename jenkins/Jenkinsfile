changes = false 

stage('Get_Scripts'){
    node {
        sh 'echo "Getting Terraform Scripts"'

        // // Checkout the Terraform API Calls
        git url: 'https://github.com/Westpac/tfscripts'

        // Mark the code build 'plan'....
        stage name: 'Plan', concurrency: 1

        //Remove the terraform state file so we always start from a clean state
        if (fileExists(".terraform/terraform.tfstate")) {
            sh "rm -rf .terraform/terraform.tfstate"
        }
        
        if (fileExists("status")) {
            sh "rm status"
        }


        // Creating Plan
        sh ('pip3 install -r terraform/requirements.txt')
        sh ("set +e; python3 terraform/run_plan.py \'${params.organisation}\' \'${params.app_id}\' \'${params.workspace_name}\' \'${params.atlas_token}\'; echo \$? >> status")
        
        // Code = 0 No Changes, 1 = Failure, 2 = Changes to be applied
        def exitCode = readFile('status').trim()

        // Skip approval step and auto app if 1
        requiresApproval = "0"

        if (exitCode == "0") {
            sh 'echo "Plan Success"'
            currentBuild.result = 'SUCCESS'
        }
        else if (exitCode == "1") {
            currentBuild.result = 'FAILURE'
        }
        else {
            changes = True
        }
    }
}

// Return as Success if no changes
if (!changes) {
    return 
}

// RAISE CHANGE REQUEST TO SERVICENOW HERE

// Request Approval from ServiceNow
input message:'Approve deployment?' 


stage('Apply'){
    node {
        applyExitCode = "0"

        if (applyExitCode == "0") {
            currentBuild.result = 'SUCCESS'
        } else {
            currentBuild.result = 'FAILURE'
        }
    } 
}

